---
import Layout from '../../layouts/Layout.astro';
import Article from "../../components/Article.astro";
import { getBooks } from '../../lib/getBooks';
import type { GetStaticPathsOptions } from 'astro';

export const getStaticPaths = async ({ paginate }: GetStaticPathsOptions) => {
  const books = await getBooks({ limit: 100 });
  return paginate(books.contents, { pageSize: 3 });
};
const { page } = Astro.props;
---

<Layout title={ page.currentPage == 1 ? '書籍一覧｜Astroサンプル' : `${page.currentPage}ページ目｜書籍一覧｜Astroサンプル`} menu="book">
  <div class="bg-white py-24 sm:py-32">
    <div class="mx-auto max-w-7xl px-6 lg:px-8">
      <div class="mx-auto max-w-2xl lg:mx-0">
        <h2 class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">
          From the blog
        </h2>
        <p class="mt-2 text-lg leading-8 text-gray-600">
          Learn how to grow your business with our expert advice.
        </p>
      </div>
      <div
        class="mx-auto mt-10 grid max-w-2xl grid-cols-1 gap-y-16 gap-x-8 border-t border-gray-200 pt-10 sm:mt-16 sm:pt-16 lg:mx-0 lg:max-w-none lg:grid-cols-3"
      >
        {page.data.map((book) => <Article {...book} />)}
      </div>
    </div>
    <nav>
      {/* page.currentPageで現在ページ、page.lastPageで総ページ数を表示 */}
      <p>page {page.currentPage}/{page.lastPage}</p>
      <ul>
        {/* page.url.prevがある場合は前ページへのリンクを表示 */}
        {page.url.prev && (
          <li>
            <a href={page.url.prev}>PREV</a>
          </li>
        )}
        {/* page.url.nextがある場合は次ページへのリンクを表示 */}
        {page.url.next && (
          <li>
            <a href={page.url.next}>NEXT</a>
          </li>
        )}
      </ul>
    </nav>
  </div>
</Layout>